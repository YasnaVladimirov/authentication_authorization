{"ast":null,"code":"var _s = $RefreshSig$();\n//import axiosPrivate from \"../api/axiosPrivate\";\nimport { useEffect } from \"react\";\nimport useRefreshToken from \"./useRefreshToken\";\nimport useAuth from \"./useAuth\";\nimport axios from \"axios\";\nconst useAxiosPrivate = () => {\n  _s();\n  const refresh = useRefreshToken();\n  const {\n    auth\n  } = useAuth();\n  const axiosPrivate = axios.create({\n    baseURL: \"http://localhost:5000\",\n    withCredentials: true\n  });\n  useEffect(() => {\n    const requestIntercept = axiosPrivate.interceptors.request.use(config => {\n      if (!config.headers['Authorization']) {\n        config.headers['Authorization'] = `Bearer ${auth === null || auth === void 0 ? void 0 : auth.accessToken}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n    const responseIntercept = axiosPrivate.interceptors.response.use(response => response, async error => {\n      var _error$response;\n      const prevRequest = error === null || error === void 0 ? void 0 : error.config;\n      if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 && !(prevRequest !== null && prevRequest !== void 0 && prevRequest.sent)) {\n        prevRequest.sent = true;\n        const result = await refresh();\n        prevRequest.roles = result.roles;\n        prevRequest.headers['Authorization'] = `Bearer ${result.accessToken}`;\n        return axiosPrivate(prevRequest);\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      axiosPrivate.interceptors.request.eject(requestIntercept);\n      axiosPrivate.interceptors.response.eject(responseIntercept);\n    };\n  }, [auth, refresh]);\n  return axiosPrivate;\n};\n_s(useAxiosPrivate, \"cOmbDhC1G7Ca93jGC+edHF4xR3w=\", false, function () {\n  return [useRefreshToken, useAuth];\n});\nexport default useAxiosPrivate;\n\n// import axios from \"axios\";\n// import { useEffect } from \"react\";\n// import useAuth from \"./useAuth\";\n// import useRefreshToken from \"./useRefreshToken\";\n\n// const useAxiosPrivate = () => {\n//   const { auth } = useAuth();\n//   const refresh = useRefreshToken();\n//   const axiosPrivate = axios.create({\n//     baseURL: \"http://localhost:5000\",\n//     withCredentials: true\n//   });\n\n//   useEffect(() => {\n//     const requestIntercept = axiosPrivate.interceptors.request.use(\n//       (config) => {\n//         if (!config.headers['Authorization']) {\n//           config.headers['Authorization'] = `Bearer ${auth?.accessToken}`;\n//         }\n//         return config;\n//       },\n//       (error) => Promise.reject(error));\n\n//     const responseIntercept = axios.interceptors.response.use(\n//       (response) => {\n//         return response;\n//       }, async (error) => {\n//         const prevRequest = error?.config;\n//         if (error.response.status === 403 && !prevRequest.sent) {\n//           prevRequest.sent = true;\n//           const newAccessToken = await refresh();\n//           prevRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n//           return axiosPrivate(prevRequest);\n//         }\n//         return Promise.reject(error);\n//       });\n\n//     return () => {\n//       axiosPrivate.interceptors.request.eject(requestIntercept);\n//       axiosPrivate.interceptors.response.eject(responseIntercept);\n//     }\n//   }, [auth, refresh]);\n\n//   return axiosPrivate;\n// }\n\n// export default useAxiosPrivate;","map":{"version":3,"names":["useEffect","useRefreshToken","useAuth","axios","useAxiosPrivate","_s","refresh","auth","axiosPrivate","create","baseURL","withCredentials","requestIntercept","interceptors","request","use","config","headers","accessToken","error","Promise","reject","responseIntercept","response","_error$response","prevRequest","status","sent","result","roles","eject"],"sources":["C:/Users/User/Desktop/js/react-apps/react-auth/client/src/hooks/useAxiosPrivate.js"],"sourcesContent":["//import axiosPrivate from \"../api/axiosPrivate\";\r\nimport { useEffect } from \"react\";\r\nimport useRefreshToken from \"./useRefreshToken\";\r\nimport useAuth from \"./useAuth\";\r\nimport axios from \"axios\";\r\n\r\nconst useAxiosPrivate = () => {\r\n    const refresh = useRefreshToken();\r\n    const { auth } = useAuth();\r\n    const axiosPrivate = axios.create({\r\n        baseURL: \"http://localhost:5000\",\r\n        withCredentials: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        const requestIntercept = axiosPrivate.interceptors.request.use(\r\n            config => {\r\n                if (!config.headers['Authorization']) {\r\n                    config.headers['Authorization'] = `Bearer ${auth?.accessToken}`;\r\n                }\r\n                return config;\r\n            }, (error) => Promise.reject(error)\r\n        );\r\n\r\n        const responseIntercept = axiosPrivate.interceptors.response.use(\r\n            response => response,\r\n            async (error) => {\r\n                const prevRequest = error?.config;\r\n                if (error?.response?.status === 403 && !prevRequest?.sent) {\r\n                    prevRequest.sent = true;\r\n                    const result = await refresh();\r\n                    prevRequest.roles = result.roles;\r\n                    prevRequest.headers['Authorization'] = `Bearer ${result.accessToken}`;\r\n                    return axiosPrivate(prevRequest);\r\n                }\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            axiosPrivate.interceptors.request.eject(requestIntercept);\r\n            axiosPrivate.interceptors.response.eject(responseIntercept);\r\n        }\r\n    }, [auth, refresh])\r\n\r\n    return axiosPrivate;\r\n}\r\n\r\nexport default useAxiosPrivate;\r\n\r\n// import axios from \"axios\";\r\n// import { useEffect } from \"react\";\r\n// import useAuth from \"./useAuth\";\r\n// import useRefreshToken from \"./useRefreshToken\";\r\n\r\n// const useAxiosPrivate = () => {\r\n//   const { auth } = useAuth();\r\n//   const refresh = useRefreshToken();\r\n//   const axiosPrivate = axios.create({\r\n//     baseURL: \"http://localhost:5000\",\r\n//     withCredentials: true\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const requestIntercept = axiosPrivate.interceptors.request.use(\r\n//       (config) => {\r\n//         if (!config.headers['Authorization']) {\r\n//           config.headers['Authorization'] = `Bearer ${auth?.accessToken}`;\r\n//         }\r\n//         return config;\r\n//       },\r\n//       (error) => Promise.reject(error));\r\n\r\n//     const responseIntercept = axios.interceptors.response.use(\r\n//       (response) => {\r\n//         return response;\r\n//       }, async (error) => {\r\n//         const prevRequest = error?.config;\r\n//         if (error.response.status === 403 && !prevRequest.sent) {\r\n//           prevRequest.sent = true;\r\n//           const newAccessToken = await refresh();\r\n//           prevRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\r\n//           return axiosPrivate(prevRequest);\r\n//         }\r\n//         return Promise.reject(error);\r\n//       });\r\n\r\n//     return () => {\r\n//       axiosPrivate.interceptors.request.eject(requestIntercept);\r\n//       axiosPrivate.interceptors.response.eject(responseIntercept);\r\n//     }\r\n//   }, [auth, refresh]);\r\n\r\n//   return axiosPrivate;\r\n// }\r\n\r\n// export default useAxiosPrivate;"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,OAAO,GAAGL,eAAe,CAAC,CAAC;EACjC,MAAM;IAAEM;EAAK,CAAC,GAAGL,OAAO,CAAC,CAAC;EAC1B,MAAMM,YAAY,GAAGL,KAAK,CAACM,MAAM,CAAC;IAC9BC,OAAO,EAAE,uBAAuB;IAChCC,eAAe,EAAE;EACrB,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IAEZ,MAAMY,gBAAgB,GAAGJ,YAAY,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1DC,MAAM,IAAI;MACN,IAAI,CAACA,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;QAClCD,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,GAAI,UAASV,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,WAAY,EAAC;MACnE;MACA,OAAOF,MAAM;IACjB,CAAC,EAAGG,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACtC,CAAC;IAED,MAAMG,iBAAiB,GAAGd,YAAY,CAACK,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC5DQ,QAAQ,IAAIA,QAAQ,EACpB,MAAOJ,KAAK,IAAK;MAAA,IAAAK,eAAA;MACb,MAAMC,WAAW,GAAGN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEH,MAAM;MACjC,IAAI,CAAAG,KAAK,aAALA,KAAK,wBAAAK,eAAA,GAALL,KAAK,CAAEI,QAAQ,cAAAC,eAAA,uBAAfA,eAAA,CAAiBE,MAAM,MAAK,GAAG,IAAI,EAACD,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEE,IAAI,GAAE;QACvDF,WAAW,CAACE,IAAI,GAAG,IAAI;QACvB,MAAMC,MAAM,GAAG,MAAMtB,OAAO,CAAC,CAAC;QAC9BmB,WAAW,CAACI,KAAK,GAAGD,MAAM,CAACC,KAAK;QAChCJ,WAAW,CAACR,OAAO,CAAC,eAAe,CAAC,GAAI,UAASW,MAAM,CAACV,WAAY,EAAC;QACrE,OAAOV,YAAY,CAACiB,WAAW,CAAC;MACpC;MACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAChC,CACJ,CAAC;IAED,OAAO,MAAM;MACTX,YAAY,CAACK,YAAY,CAACC,OAAO,CAACgB,KAAK,CAAClB,gBAAgB,CAAC;MACzDJ,YAAY,CAACK,YAAY,CAACU,QAAQ,CAACO,KAAK,CAACR,iBAAiB,CAAC;IAC/D,CAAC;EACL,CAAC,EAAE,CAACf,IAAI,EAAED,OAAO,CAAC,CAAC;EAEnB,OAAOE,YAAY;AACvB,CAAC;AAAAH,EAAA,CAzCKD,eAAe;EAAA,QACDH,eAAe,EACdC,OAAO;AAAA;AAyC5B,eAAeE,eAAe;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}