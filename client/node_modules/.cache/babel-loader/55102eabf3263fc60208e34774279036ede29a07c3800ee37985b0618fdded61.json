{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\js\\\\react-apps\\\\react-auth\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Link } from \"react-router-dom\";\nimport * as yup from 'yup';\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nfunction Register() {\n  _s();\n  const usernameRef = useRef();\n  const errRef = useRef();\n  const schema = yup.object().shape({\n    username: yup.string().min(3, \"Username must be at least 3 characters\").max(23, \"Username must be at most 23 characters\").required(\"Username is required!\"),\n    password: yup.string().min(5, \"Password must be at least 5 characters\").max(24, \"Password must be at most 24 characters\").required(\"Password is required!\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%])$/, 'Password must contain at least one capital letter, one number, and one of !@#$%'),\n    matchPassword: yup.string().oneOf([yup.ref(\"password\")], \"Passwords must match\").required('Confirm password is required')\n  });\n\n  // const [username, setUsername] = useState(\"\");\n  // const [validUsername, setValidUsername] = useState(false);\n  // const [userFocus, setUserFocus] = useState(false);\n\n  // const [password, setPassword] = useState(\"\");\n  // const [validPassword, setValidPassword] = useState(false);\n  // const [pswFocus, setPswFocus] = useState(false);\n\n  // const [matchPassword, setMatchPassword] = useState(\"\");\n  // const [validMatch, setValidMatch] = useState(false);\n  // const [matchPswFocus, setMatchPswFocus] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    matchPassword: \"\"\n  });\n  const [validation, setValidation] = useState({\n    validUsername: false,\n    validPassword: false,\n    validMatch: false\n  });\n  const [focus, setFocus] = useState({\n    userFocus: false,\n    pswFocus: false,\n    matchPswFocus: false\n  });\n  const [errMsg, setErrMsg] = useState([]);\n\n  // useEffect(() => {\n  //   usernameRef.current.focus();\n  // }, []);\n\n  // useEffect(() => {\n  //   schema.validate({ username }).then(() => {\n  //     setValidUsername(true);\n  //   }).catch(() => {\n  //     setValidUsername(false);\n  //   });\n  //   console.log(validUsername);\n\n  //   //setValidUsername(USER_REGEX.test(username));\n  // }, [username])\n\n  // useEffect(() => {\n  //   schema.validate({ password }).then(() => {\n  //     setValidPassword(true);\n  //   }).catch(() => {\n  //     setValidPassword(false);\n  //   });\n  //   console.log(validPassword);\n\n  //   //setValidPassword(PWD_REGEX.test(password))\n  //   //setValidMatch(password === matchPassword);\n  // }, [password, matchPassword])\n\n  // useEffect(() => {\n  //   schema.validate({ password }).then(() => {\n  //     setValidMatch(true);\n  //   }).catch(() => {\n  //     setValidMatch(false);\n  //   });\n  //   console.log(validMatch);\n  // }, [matchPassword])\n\n  useEffect(() => {\n    schema.validate(formData, {\n      abortEarly: false\n    }).then(() => {\n      setValidation({\n        validUsername: true,\n        validPassword: true,\n        validMatch: true\n      });\n    }).catch(validationErrors => {\n      setValidation({\n        validUsername: false,\n        validPassword: false,\n        validMatch: false\n      });\n      setErrMsg(validationErrors.errors);\n    });\n  }, [formData, schema]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [formData.username, formData.password, formData.matchPassword]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"Subbmited\");\n  }\n\n  // return (\n  //   <div className='container'>\n  //     {errMsg && errMsg.map((error) => (\n  //       <p ref={errRef} className=\"errmsg\" aria-live=\"assertive\">{error}</p>\n  //     ))}\n  //     <h1>Register</h1>\n  //     <form>\n  //       <label htmlFor='username'>\n  //         Username:\n  //         <FontAwesomeIcon icon={faCheck} className={validUsername ? \"valid\" : \"hide\"} />\n  //         <FontAwesomeIcon icon={faTimes} className={validUsername || !username ? \"hide\" : \"invalid\"} />\n  //       </label>\n  //       <input\n  //         id='username'\n  //         ref={usernameRef}\n  //         type='text'\n  //         name='username'\n  //         autoComplete=\"off\"\n  //         onChange={(e) => setUsername(e.target.value)}\n  //         onFocus={() => setUserFocus(true)}\n  //         onBlur={() => setUserFocus(false)}\n  //       />\n  //       <p className={userFocus && username && !validUsername ? \"instructions\" : \"hide\"}>\n  //         <FontAwesomeIcon icon={faInfoCircle} />\n  //         4 to 24 characters.<br />\n  //         Must begin with a letter.<br />\n  //         Letters, numbers, underscores, hyphens allowed.\n  //       </p>\n\n  //       <label htmlFor='password'>\n  //         Password:\n  //         <FontAwesomeIcon icon={faCheck} className={validPassword ? \"valid\" : \"hide\"} />\n  //         <FontAwesomeIcon icon={faTimes} className={validPassword || !password ? \"hide\" : \"invalid\"} />\n  //       </label>\n  //       <input\n  //         id='password'\n  //         type='password'\n  //         name='password'\n\n  //         onChange={(e) => setPassword(e.target.value)}\n  //         onFocus={() => setPswFocus(true)}\n  //         onBlur={() => setPswFocus(false)}\n  //       />\n  //       <p className={pswFocus && password && !validPassword ? \"instructions\" : \"hide\"}>\n  //         <FontAwesomeIcon icon={faInfoCircle} />\n  //         5 to 24 characters.<br />\n  //         Must include uppercase and lowercase letters, a number and a special character.<br />\n  //         Allowed special characters: !@#$%\n  //       </p>\n\n  //       <label htmlFor='matchPassword'>\n  //         Confirm Password:\n  //         <FontAwesomeIcon icon={faCheck} className={validMatch ? \"valid\" : \"hide\"} />\n  //         <FontAwesomeIcon icon={faTimes} className={validMatch || !matchPassword ? \"hide\" : \"invalid\"} />\n  //       </label>\n  //       <input\n  //         id='matchPassword'\n  //         type='password'\n  //         name='matchPassword'\n\n  //         onChange={(e) => setMatchPassword(e.target.value)}\n  //         onFocus={() => setMatchPswFocus(true)}\n  //         onBlur={() => setMatchPswFocus(false)}\n  //       />\n  //       <p className={matchPswFocus && matchPassword && !validMatch ? \"instructions\" : \"hide\"}>\n  //         <FontAwesomeIcon icon={faInfoCircle} />\n  //         Must match the first password input field.\n  //       </p>\n\n  //       <button disabled={!validUsername || !validPassword || !validMatch ? true : false} onClick={handleSubmit}>Sign Up</button>\n  //       <p>Already registered?</p>\n  //       <Link to=\"/login\" className='link'>Sign in</Link>\n  //     </form>\n  //   </div>\n  //)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [errMsg && errMsg.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: \"errmsg\",\n      \"aria-live\": \"assertive\",\n      children: error\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheck,\n          className: validation.validUsername ? \"valid\" : \"hide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes,\n          className: validation.validUsername || !formData.username ? \"hide\" : \"invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        ref: usernameRef,\n        type: \"text\",\n        name: \"username\",\n        autoComplete: \"off\",\n        value: formData.username,\n        onChange: handleChange,\n        onFocus: () => setFocus({\n          ...focus,\n          userFocus: true\n        }),\n        onBlur: () => setFocus({\n          ...focus,\n          userFocus: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: focus.userFocus && formData.username && !validation.validUsername ? \"instructions\" : \"hide\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 30\n        }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 36\n        }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheck,\n          className: validation.validPassword ? \"valid\" : \"hide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes,\n          className: validation.validPassword || !formData.password ? \"hide\" : \"invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        onFocus: () => setFocus({\n          ...focus,\n          pswFocus: true\n        }),\n        onBlur: () => setFocus({\n          ...focus,\n          pswFocus: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: focus.pswFocus && formData.password && !validation.validPassword ? \"instructions\" : \"hide\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), \"5 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 30\n        }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 90\n        }, this), \"Allowed special characters: !@#$%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"matchPassword\",\n        children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheck,\n          className: validation.validMatch ? \"valid\" : \"hide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes,\n          className: validation.validMatch || !formData.matchPassword ? \"hide\" : \"invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"matchPassword\",\n        type: \"password\",\n        name: \"matchPassword\",\n        value: formData.matchPassword,\n        onChange: handleChange,\n        onFocus: () => setFocus({\n          ...focus,\n          matchPswFocus: true\n        }),\n        onBlur: () => setFocus({\n          ...focus,\n          matchPswFocus: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: focus.matchPswFocus && formData.matchPassword && !validation.validMatch ? \"instructions\" : \"hide\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), \"Must match the first password input field.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !validation.validUsername || !validation.validPassword || !validation.validMatch,\n        onClick: handleSubmit,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Already registered?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"link\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"5mcqkpOMTEtlP1Ytchr03IDSrNY=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Link","yup","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","jsxDEV","_jsxDEV","USER_REGEX","PWD_REGEX","Register","_s","usernameRef","errRef","schema","object","shape","username","string","min","max","required","password","matches","matchPassword","oneOf","ref","formData","setFormData","validation","setValidation","validUsername","validPassword","validMatch","focus","setFocus","userFocus","pswFocus","matchPswFocus","errMsg","setErrMsg","validate","abortEarly","then","catch","validationErrors","errors","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","console","log","className","children","map","error","index","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","icon","id","type","autoComplete","onChange","onFocus","onBlur","disabled","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/js/react-apps/react-auth/client/src/pages/Register.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as yup from 'yup';\r\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\n\r\nfunction Register() {\r\n  const usernameRef = useRef();\r\n  const errRef = useRef();\r\n\r\n  const schema = yup.object().shape({\r\n    username: yup\r\n      .string()\r\n      .min(3, \"Username must be at least 3 characters\")\r\n      .max(23, \"Username must be at most 23 characters\")\r\n      .required(\"Username is required!\"),\r\n    password: yup\r\n      .string()\r\n      .min(5, \"Password must be at least 5 characters\")\r\n      .max(24, \"Password must be at most 24 characters\")\r\n      .required(\"Password is required!\")\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%])$/,\r\n        'Password must contain at least one capital letter, one number, and one of !@#$%'\r\n      ),\r\n    matchPassword: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\")], \"Passwords must match\")\r\n      .required('Confirm password is required'),\r\n  });\r\n\r\n  // const [username, setUsername] = useState(\"\");\r\n  // const [validUsername, setValidUsername] = useState(false);\r\n  // const [userFocus, setUserFocus] = useState(false);\r\n\r\n  // const [password, setPassword] = useState(\"\");\r\n  // const [validPassword, setValidPassword] = useState(false);\r\n  // const [pswFocus, setPswFocus] = useState(false);\r\n\r\n  // const [matchPassword, setMatchPassword] = useState(\"\");\r\n  // const [validMatch, setValidMatch] = useState(false);\r\n  // const [matchPswFocus, setMatchPswFocus] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    matchPassword: \"\",\r\n  });\r\n\r\n  const [validation, setValidation] = useState({\r\n    validUsername: false,\r\n    validPassword: false,\r\n    validMatch: false,\r\n  });\r\n\r\n  const [focus, setFocus] = useState({\r\n    userFocus: false,\r\n    pswFocus: false,\r\n    matchPswFocus: false,\r\n  });\r\n\r\n\r\n  const [errMsg, setErrMsg] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   usernameRef.current.focus();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   schema.validate({ username }).then(() => {\r\n  //     setValidUsername(true);\r\n  //   }).catch(() => {\r\n  //     setValidUsername(false);\r\n  //   });\r\n  //   console.log(validUsername);\r\n\r\n  //   //setValidUsername(USER_REGEX.test(username));\r\n  // }, [username])\r\n\r\n  // useEffect(() => {\r\n  //   schema.validate({ password }).then(() => {\r\n  //     setValidPassword(true);\r\n  //   }).catch(() => {\r\n  //     setValidPassword(false);\r\n  //   });\r\n  //   console.log(validPassword);\r\n\r\n  //   //setValidPassword(PWD_REGEX.test(password))\r\n  //   //setValidMatch(password === matchPassword);\r\n  // }, [password, matchPassword])\r\n\r\n  // useEffect(() => {\r\n  //   schema.validate({ password }).then(() => {\r\n  //     setValidMatch(true);\r\n  //   }).catch(() => {\r\n  //     setValidMatch(false);\r\n  //   });\r\n  //   console.log(validMatch);\r\n  // }, [matchPassword])\r\n\r\n  useEffect(() => {\r\n    schema\r\n      .validate(formData, { abortEarly: false })\r\n      .then(() => {\r\n        setValidation({\r\n          validUsername: true,\r\n          validPassword: true,\r\n          validMatch: true,\r\n        });\r\n      })\r\n      .catch((validationErrors) => {\r\n        setValidation({\r\n          validUsername: false,\r\n          validPassword: false,\r\n          validMatch: false,\r\n        });\r\n        setErrMsg(validationErrors.errors);\r\n      });\r\n  }, [formData, schema]);\r\n\r\n  useEffect(() => {\r\n    setErrMsg('');\r\n  }, [formData.username, formData.password, formData.matchPassword])\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  \r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    console.log(\"Subbmited\");\r\n  }\r\n\r\n\r\n\r\n  // return (\r\n  //   <div className='container'>\r\n  //     {errMsg && errMsg.map((error) => (\r\n  //       <p ref={errRef} className=\"errmsg\" aria-live=\"assertive\">{error}</p>\r\n  //     ))}\r\n  //     <h1>Register</h1>\r\n  //     <form>\r\n  //       <label htmlFor='username'>\r\n  //         Username:\r\n  //         <FontAwesomeIcon icon={faCheck} className={validUsername ? \"valid\" : \"hide\"} />\r\n  //         <FontAwesomeIcon icon={faTimes} className={validUsername || !username ? \"hide\" : \"invalid\"} />\r\n  //       </label>\r\n  //       <input\r\n  //         id='username'\r\n  //         ref={usernameRef}\r\n  //         type='text'\r\n  //         name='username'\r\n  //         autoComplete=\"off\"\r\n  //         onChange={(e) => setUsername(e.target.value)}\r\n  //         onFocus={() => setUserFocus(true)}\r\n  //         onBlur={() => setUserFocus(false)}\r\n  //       />\r\n  //       <p className={userFocus && username && !validUsername ? \"instructions\" : \"hide\"}>\r\n  //         <FontAwesomeIcon icon={faInfoCircle} />\r\n  //         4 to 24 characters.<br />\r\n  //         Must begin with a letter.<br />\r\n  //         Letters, numbers, underscores, hyphens allowed.\r\n  //       </p>\r\n\r\n  //       <label htmlFor='password'>\r\n  //         Password:\r\n  //         <FontAwesomeIcon icon={faCheck} className={validPassword ? \"valid\" : \"hide\"} />\r\n  //         <FontAwesomeIcon icon={faTimes} className={validPassword || !password ? \"hide\" : \"invalid\"} />\r\n  //       </label>\r\n  //       <input\r\n  //         id='password'\r\n  //         type='password'\r\n  //         name='password'\r\n\r\n  //         onChange={(e) => setPassword(e.target.value)}\r\n  //         onFocus={() => setPswFocus(true)}\r\n  //         onBlur={() => setPswFocus(false)}\r\n  //       />\r\n  //       <p className={pswFocus && password && !validPassword ? \"instructions\" : \"hide\"}>\r\n  //         <FontAwesomeIcon icon={faInfoCircle} />\r\n  //         5 to 24 characters.<br />\r\n  //         Must include uppercase and lowercase letters, a number and a special character.<br />\r\n  //         Allowed special characters: !@#$%\r\n  //       </p>\r\n\r\n  //       <label htmlFor='matchPassword'>\r\n  //         Confirm Password:\r\n  //         <FontAwesomeIcon icon={faCheck} className={validMatch ? \"valid\" : \"hide\"} />\r\n  //         <FontAwesomeIcon icon={faTimes} className={validMatch || !matchPassword ? \"hide\" : \"invalid\"} />\r\n  //       </label>\r\n  //       <input\r\n  //         id='matchPassword'\r\n  //         type='password'\r\n  //         name='matchPassword'\r\n\r\n  //         onChange={(e) => setMatchPassword(e.target.value)}\r\n  //         onFocus={() => setMatchPswFocus(true)}\r\n  //         onBlur={() => setMatchPswFocus(false)}\r\n  //       />\r\n  //       <p className={matchPswFocus && matchPassword && !validMatch ? \"instructions\" : \"hide\"}>\r\n  //         <FontAwesomeIcon icon={faInfoCircle} />\r\n  //         Must match the first password input field.\r\n  //       </p>\r\n\r\n  //       <button disabled={!validUsername || !validPassword || !validMatch ? true : false} onClick={handleSubmit}>Sign Up</button>\r\n  //       <p>Already registered?</p>\r\n  //       <Link to=\"/login\" className='link'>Sign in</Link>\r\n  //     </form>\r\n  //   </div>\r\n  //)\r\n\r\n  return (\r\n    <div className='container'>\r\n      {errMsg && errMsg.map((error, index) => (\r\n        <p key={index} ref={errRef} className=\"errmsg\" aria-live=\"assertive\">{error}</p>\r\n      ))}\r\n      <h1>Register</h1>\r\n      <form>\r\n        <label htmlFor='username'>\r\n          Username:\r\n          <FontAwesomeIcon icon={faCheck} className={validation.validUsername ? \"valid\" : \"hide\"} />\r\n          <FontAwesomeIcon icon={faTimes} className={validation.validUsername || !formData.username ? \"hide\" : \"invalid\"} />\r\n        </label>\r\n        <input\r\n          id='username'\r\n          ref={usernameRef}\r\n          type='text'\r\n          name='username'\r\n          autoComplete=\"off\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          onFocus={() => setFocus({ ...focus, userFocus: true })}\r\n          onBlur={() => setFocus({ ...focus, userFocus: false })}\r\n        />\r\n        <p className={focus.userFocus && formData.username && !validation.validUsername ? \"instructions\" : \"hide\"}>\r\n          <FontAwesomeIcon icon={faInfoCircle} />\r\n          4 to 24 characters.<br />\r\n          Must begin with a letter.<br />\r\n          Letters, numbers, underscores, hyphens allowed.\r\n        </p>\r\n\r\n        <label htmlFor='password'>\r\n          Password:\r\n          <FontAwesomeIcon icon={faCheck} className={validation.validPassword ? \"valid\" : \"hide\"} />\r\n          <FontAwesomeIcon icon={faTimes} className={validation.validPassword || !formData.password ? \"hide\" : \"invalid\"} />\r\n        </label>\r\n        <input\r\n          id='password'\r\n          type='password'\r\n          name='password'\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          onFocus={() => setFocus({ ...focus, pswFocus: true })}\r\n          onBlur={() => setFocus({ ...focus, pswFocus: false })}\r\n        />\r\n        <p className={focus.pswFocus && formData.password && !validation.validPassword ? \"instructions\" : \"hide\"}>\r\n          <FontAwesomeIcon icon={faInfoCircle} />\r\n          5 to 24 characters.<br />\r\n          Must include uppercase and lowercase letters, a number and a special character.<br />\r\n          Allowed special characters: !@#$%\r\n        </p>\r\n\r\n        <label htmlFor='matchPassword'>\r\n          Confirm Password:\r\n          <FontAwesomeIcon icon={faCheck} className={validation.validMatch ? \"valid\" : \"hide\"} />\r\n          <FontAwesomeIcon icon={faTimes} className={validation.validMatch || !formData.matchPassword ? \"hide\" : \"invalid\"} />\r\n        </label>\r\n        <input\r\n          id='matchPassword'\r\n          type='password'\r\n          name='matchPassword'\r\n          value={formData.matchPassword}\r\n          onChange={handleChange}\r\n          onFocus={() => setFocus({ ...focus, matchPswFocus: true })}\r\n          onBlur={() => setFocus({ ...focus, matchPswFocus: false })}\r\n        />\r\n        <p className={focus.matchPswFocus && formData.matchPassword && !validation.validMatch ? \"instructions\" : \"hide\"}>\r\n          <FontAwesomeIcon icon={faInfoCircle} />\r\n          Must match the first password input field.\r\n        </p>\r\n\r\n        <button disabled={!validation.validUsername || !validation.validPassword || !validation.validMatch} onClick={handleSubmit}>Sign Up</button>\r\n        <p>Already registered?</p>\r\n        <Link to=\"/login\" className='link'>Sign in</Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}