{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\js\\\\react-apps\\\\react-auth\\\\client\\\\src\\\\pages\\\\Register2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register2() {\n  _s();\n  var _errors$username, _errors$password, _errors$matchPassword;\n  const schema = yup.object().shape({\n    username: yup.string().min(3, \"Username must be at least 3 characters\").max(23, \"Username must be at most 23 characters\").required(\"Username is required\"),\n    password: yup.string().min(5, \"Password must be at least 5 characters\").max(23, \"Password must be at most 23 characters\").required(\"Password is required\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%])$/, \"Invalid password. Follow instructions!\"),\n    matchPassword: yup.string().oneOf([yup.ref(\"password\")], \"Passwords must match\").required(\"Confirm password is required\")\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [userFocus, setUserFocus] = useState(false);\n  const [pswFocus, setPswFocus] = useState(false);\n  const [matchPswFocus, setMatchPswFocus] = useState(false);\n  function onSubmit(data) {\n    console.log(data);\n  }\n  useEffect(() => {}, [sche]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [((_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.username.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        ...register(\"username\"),\n        onFocus: () => setUserFocus(true),\n        onBlur: () => setUserFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: userFocus ? \"instructions\" : \"hide\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 30\n        }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 36\n        }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        ...register(\"password\"),\n        onFocus: () => setPswFocus(true),\n        onBlur: () => setPswFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: pswFocus ? \"instructions\" : \"hide\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), \"5 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 30\n        }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 90\n        }, this), \"Allowed special characters: !@#$%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), ((_errors$matchPassword = errors.matchPassword) === null || _errors$matchPassword === void 0 ? void 0 : _errors$matchPassword.message) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.matchPassword.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"matchPassword\",\n        children: \"Match Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"matchPassword\",\n        name: \"matchPassword\",\n        ...register(\"matchPassword\"),\n        onFocus: () => setMatchPswFocus(true),\n        onBlur: () => setMatchPswFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: matchPswFocus ? \"instructions\" : \"hide\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), \"Must match the first password input field.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Register2, \"WDuSvBZ0e13Pe5O0Ii7oyHwZ9rA=\", false, function () {\n  return [useForm];\n});\n_c = Register2;\nexport default Register2;\nvar _c;\n$RefreshReg$(_c, \"Register2\");","map":{"version":3,"names":["React","useEffect","useState","yup","useForm","yupResolver","faInfoCircle","FontAwesomeIcon","jsxDEV","_jsxDEV","Register2","_s","_errors$username","_errors$password","_errors$matchPassword","schema","object","shape","username","string","min","max","required","password","matches","matchPassword","oneOf","ref","register","handleSubmit","formState","errors","resolver","userFocus","setUserFocus","pswFocus","setPswFocus","matchPswFocus","setMatchPswFocus","onSubmit","data","console","log","sche","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","htmlFor","type","id","name","onFocus","onBlur","icon","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/js/react-apps/react-auth/client/src/pages/Register2.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport * as yup from 'yup'\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Register2() {\r\n\r\n  const schema = yup.object().shape({\r\n    username: yup.string()\r\n      .min(3, \"Username must be at least 3 characters\")\r\n      .max(23, \"Username must be at most 23 characters\")\r\n      .required(\"Username is required\"),\r\n    password: yup.string()\r\n      .min(5, \"Password must be at least 5 characters\")\r\n      .max(23, \"Password must be at most 23 characters\")\r\n      .required(\"Password is required\")\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%])$/,\r\n        \"Invalid password. Follow instructions!\"\r\n      ),\r\n    matchPassword: yup.string().oneOf([yup.ref(\"password\")], \"Passwords must match\").required(\"Confirm password is required\")\r\n  });\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n  const [userFocus, setUserFocus] = useState(false);\r\n  const [pswFocus, setPswFocus] = useState(false);\r\n  const [matchPswFocus, setMatchPswFocus] = useState(false);\r\n\r\n  function onSubmit(data) {\r\n    console.log(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  }, [sche])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {errors.username?.message && <span className='error'>{errors.username.message}</span>}\r\n        <label htmlFor='username'>Username</label>\r\n        <input\r\n          type='text'\r\n          id='username'\r\n          name='username'\r\n          {...register(\"username\")}\r\n          onFocus={() => setUserFocus(true)}\r\n          onBlur={() => setUserFocus(false)}\r\n        />\r\n        <p className={userFocus ? \"instructions\" : \"hide\"}>\r\n          <FontAwesomeIcon icon={faInfoCircle} />\r\n          4 to 24 characters.<br />\r\n          Must begin with a letter.<br />\r\n          Letters, numbers, underscores, hyphens allowed.\r\n        </p>\r\n\r\n        {errors.password?.message && <span className='error'>{errors.password.message}</span>}\r\n        <label htmlFor='password'>Password</label>\r\n        <input\r\n          type='password'\r\n          id='password'\r\n          name='password'\r\n          {...register(\"password\")}\r\n          onFocus={() => setPswFocus(true)}\r\n          onBlur={() => setPswFocus(false)}\r\n        />\r\n        <p className={pswFocus ? \"instructions\" : \"hide\"}>\r\n          <FontAwesomeIcon icon={faInfoCircle} />\r\n          5 to 24 characters.<br />\r\n          Must include uppercase and lowercase letters, a number and a special character.<br />\r\n          Allowed special characters: !@#$%\r\n        </p>\r\n\r\n        {errors.matchPassword?.message && <span className='error'>{errors.matchPassword.message}</span>}\r\n        <label htmlFor='matchPassword'>Match Password</label>\r\n        <input\r\n          type='password'\r\n          id='matchPassword'\r\n          name='matchPassword'\r\n          {...register(\"matchPassword\")}\r\n          onFocus={() => setMatchPswFocus(true)}\r\n          onBlur={() => setMatchPswFocus(false)}\r\n        />\r\n        <p className={matchPswFocus ? \"instructions\" : \"hide\"}>\r\n          <FontAwesomeIcon icon={faInfoCircle} />\r\n          Must match the first password input field.\r\n        </p>\r\n\r\n        <button type='submit'>Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register2"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}